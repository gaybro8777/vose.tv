# VOSE.TV
# Redirect www to non-www
server {
  listen 80;
  listen 443;
  server_name www.vose.tv;
  return 301 https://vose.tv$request_uri;
}
# Redirect http to https
server {
  listen 80;
  # listen [::]:80;
  server_name vose.tv;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name vose.tv;
  charset utf-8;
  index index.html index.htm;
  root /var/www/vose.tv/html;

  location ~ /.well-known {
    allow all;
  }
  location ~ ^/(img/|*.js|*.css|favicon.ico|vose-card.png|apple-touch-icon-precomposed.png|robots.txt|humans.txt) {
    try_files $uri =404;
    access_log off;
    expires max;
  }
  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #add_header X-Proxy-Cache $upstream_cache_status;

    #proxy_cache one;
    #proxy_cache_valid 200 1d;
    #proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;

    #proxy_cache_bypass $http_upgrade;
    #proxy_cache_bypass  $http_cache_control;

    proxy_pass http://localhost:4001;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }
ssl_certificate /etc/letsencrypt/live/vose.tv-0002/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/vose.tv-0002/privkey.pem; # managed by Certbot

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_ecdh_curve secp384r1;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;

  ssl_dhparam /etc/ssl/certs/dhparam.pem;

}
